# This is a basic workflow to help you get started with Actions

name: BOOKING-JOB

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  schedule:
    - cron:  	0/5 * * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  WebTestRunner:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install NPM
        run: |
          npm install        
      
      - name: Run Cypress Test
        run: |
          npx cypress run --spec cypress/integration/booking_agent/*.spec.js --record --key ${{ secrets.CYPRESS_KEY }}
        continue-on-error: true        
      
      - name: Upload video test result
        uses: actions/upload-artifact@v1.0.0
        with:
          # Artifact name
          name: test-result-video
          # Directory containing files to upload
          path: cypress/videos/booking_agent/       
              
      - name: Upload screenshots test result
        uses: actions/upload-artifact@v1.0.0
        with:
          # Artifact name
          name: test-result-video
          # Directory containing files to upload
          path: cypress/screenshots/booking_agent/  
      
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          check_name: Unit Test Results
          files: "tests/*.xml"

      - name: Notify Me
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          notification_title: '{workflow} has {status_message}'
          status: ${{ job.status }}
          notify_when: 'success,failure,warnings'
          mention_users: ${{ secrets.SLACK_USERS }}
          mention_users_when: 'failure,warnings'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
          
      - name: Send mail
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: ${{ secrets.EMAIL_HOST }}
          server_port:  ${{ secrets.EMAIL_PORT }}
          username: ${{secrets.EMAIL_USERNAME}}
          password: ${{secrets.EMAIL_PASSWORD}}
          subject: RDV PREFECTURE
          from: contact@kapalak.com
          body: Build job of ${{github.repository}} completed.
          html_body: file://README.html
          bcc: ${{secrets.EMAIL_BCCS}}
          to: ${{secrets.EMAIL_USERNAME}}
          reply_to: ${{secrets.EMAIL_USERNAME}}
          ignore_cert: true
          convert_markdown: true
          # Optional attachments:
          attachments: cypress/videos/booking_agent/booking.spec.js.mp4, cypress/screenshots/booking_agent/booking.spec.js/*.png
          priority: normal
          
      - name: Send Sms Notification
        if: always()
        run: |
          curl -X POST https://api.twilio.com/2010-04-01/Accounts/ACcd390961d2822915c128dd88a192597c/Messages.json \
            --data-urlencode "Body=RDV Disponbibles https://www.isere.gouv.fr/booking/create/14544/" \
            --data-urlencode "From=+33651827566" \
            --data-urlencode "To=+33651827566" \
            -u ${{secrets.TWILIO_ACCOUNT_SID}}:${{secrets.TWILIO_AUTH_TOKEN}}
